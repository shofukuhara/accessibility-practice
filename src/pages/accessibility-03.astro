---
import Base from "../layouts/Base.astro";
import Header from "../layouts/Header.astro";
import AssetsImage from "../components/common/AssetsImage.astro";
import AssetsPicture from "../components/common/AssetsPicture.astro";
import RoundLink from "../components/ui/RoundLink.astro";
import Picture from "../components/common/Picture.astro";
import RoundedLink from "../components/ui/RoundLink.astro";
---

<Base pageMeta="page" pageData="03">
  <!-- body内の要素 -->
  <Header />
  <main class="page_contents">
    <h1 class="page_title">03. キーボード操作に対応したボタンの実装</h1>
    <div class="page_wrap">
      <section class="page_section">
        <article class="page_article">
          <h2 class="page_title_02">キーボード操作に対応したボタンとは？</h2>
          <p class="page_text">
            キーボード操作に対応したボタンとは、マウスだけでなくキーボードでも操作できるボタンのことです。これにより、身体的な制約があるユーザーや、キーボードを使って操作することを好むユーザーにとって、よりアクセスしやすいインターフェースを提供します。
          </p>
        </article>
      </section>
      <section class="page_section">
        <article class="page_article">
          <h2 class="page_title_02">OKな例</h2>
          <div class="page_block">
            <button
              class="page_button"
              tabindex="0"
              type="button"
              data-ok-button
            >
              <span class="page_text">buttonタグで作られたボタン</span>
            </button>
            <p class="page_text">
              buttonタグは、デフォルトでキーボード操作に対応しています。Tabキーでフォーカスを移動し、EnterキーやSpaceキーでアクションを実行できます。
            </p>
          </div>
        </article>
      </section>
      <section class="page_section">
        <article class="page_article">
          <h2 class="page_title_02">NGな例</h2>
          <div class="page_block">
            <div class="page_button" data-ng-button>
              <span class="page_text">divタグで作られたボタン</span>
            </div>
            <p class="page_text">
              divタグは、デフォルトではキーボード操作に対応していません。Tabキーでフォーカスを移動することができず、EnterキーやSpaceキーでアクションを実行することもできません。<br
              />
              フォーカス可能にするためには、tabindex属性を追加する必要がありますが、これはアクセシビリティの観点から推奨されません。代わりにbuttonタグを使用することが望ましいです。
            </p>
          </div>
        </article>
      </section>
      <section class="page_section">
        <article class="page_article">
          <h2 class="page_title_02">
            divタグで作られたボタン（フォーカス対応）
          </h2>
          <div class="page_block">
            <div
              class="page_button"
              data-ok-custum-button
              tabindex="0"
              role="button"
            >
              <span class="page_text">divタグで作られたボタン</span>
            </div>
            <p class="page_text">
              この例では、divタグにtabindex="0"を追加してフォーカス可能にしていますが、キーボード操作に対応するためには、クリックイベントやキーボードイベントを手動で処理する必要があります。<br
              />
              そのため、アクセシビリティの観点からはbuttonタグを使用することが推奨されます。
            </p>
          </div>
        </article>
      </section>
    </div>
  </main>

  <style lang="scss">
    .page_contents {
      margin-right: auto;
      margin-left: auto;
      @include media(sp) {
        padding-top: sp_rem(40);
        padding-bottom: sp_rem(40);
        width: sp_rem(345);
      }
      @include media(pc) {
        padding-top: pc_rem(80);
        padding-bottom: pc_rem(80);
        width: pc_rem(1000);
      }
      > .page_title {
        color: var(--blue-01);
        text-align: center;
        letter-spacing: 0.04em;
        @include font-Bold;
        @include media(sp) {
          font-size: sp_rem(32);
        }
        @include media(pc) {
          font-size: pc_rem(40);
        }
      }
      > .page_wrap {
        display: flex;
        flex-direction: column;
        @include media(sp) {
          margin-top: sp_rem(40);
          row-gap: sp_rem(40);
        }
        @include media(pc) {
          margin-top: pc_rem(80);
          row-gap: pc_rem(80);
        }
        > .page_section {
          > .page_article {
            .page_title_02 {
              @include font-Bold;
              @include media(sp) {
                font-size: sp_rem(26);
              }
              @include media(pc) {
                font-size: pc_rem(32);
              }
            }
            .page_block {
              @include media(sp) {
                margin-top: sp_rem(24);
              }
              @include media(pc) {
                margin-top: pc_rem(24);
              }
              > .page_button {
                display: flex;
                align-items: center;
                justify-content: center;
                @include media(pc) {
                  width: pc_rem(360);
                  height: pc_rem(80);
                  background-color: var(--blue-02);
                  cursor: pointer;
                }
                .page_text {
                  color: var(--white-01);
                  @include media(sp) {
                    font-size: sp_rem(14);
                  }
                  @include media(pc) {
                    font-size: pc_rem(16);
                  }
                }
              }
              > .page_text {
                color: var(--white-01);
                @include media(sp) {
                  font-size: sp_rem(14);
                }
                @include media(pc) {
                  font-size: pc_rem(16);
                  margin-top: pc_rem(16);
                }
              }
            }

            > .page_text {
              @include font-Regular;
              @include media(sp) {
                font-size: sp_rem(12);
                margin-top: sp_rem(24);
              }
              @include media(pc) {
                font-size: pc_rem(18);
                margin-top: pc_rem(24);
              }
            }
            .page_title_03 {
              @include font-Bold;
              @include media(sp) {
                font-size: sp_rem(26);
                margin-top: sp_rem(8);
              }
              @include media(pc) {
                font-size: pc_rem(26);
                margin-top: pc_rem(8);
              }
            }
            > .page_col {
              display: grid;
              @include media(sp) {
                row-gap: sp_rem(40);
                margin-top: sp_rem(24);
                grid-template-columns: repeat(1, 1fr);
              }
              @include media(pc) {
                column-gap: pc_rem(40);
                margin-top: pc_rem(24);
                grid-template-columns: repeat(2, 1fr);
              }
              > .page_block {
                > .page_box {
                  width: 100%;
                  aspect-ratio: 16/ 9;
                  background-color: var(--blue-02);
                }
              }
            }
          }
        }
      }
    }
  </style>
</Base>
